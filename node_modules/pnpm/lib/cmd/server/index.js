"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const help_1 = require("../help");
const start_1 = require("./start");
const status_1 = require("./status");
const stop_1 = require("./stop");
exports.default = (input, opts) => __awaiter(this, void 0, void 0, function* () {
    switch (input[0]) {
        case 'start':
            return start_1.default(opts);
        case 'status':
            return status_1.default(opts);
        case 'stop':
            return stop_1.default(opts);
        default:
            help_1.default(['server']);
            if (input[0]) {
                const err = new Error(`"server ${input[0]}" is not a pnpm command. See "pnpm help server".`);
                err['code'] = 'ERR_PNPM_INVALID_SERVER_COMMAND'; // tslint:disable-line:no-string-literal
                throw err;
            }
    }
});
//# sourceMappingURL=index.js.map