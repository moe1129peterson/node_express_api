"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
function resolveTarball(wantedDependency) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!wantedDependency.pref.startsWith('http:') && !wantedDependency.pref.startsWith('https:')) {
            return null;
        }
        return {
            id: wantedDependency.pref
                .replace(/^.*:\/\/(git@)?/, '')
                .replace(/\.tgz$/, ''),
            // TODO BREAKING CHANGE: uncomment the following: (or never remove extensions)
            // .replace(/\.tar.gz$/, ''),
            // .replace(/\.tar$/, ''),
            normalizedPref: wantedDependency.pref,
            resolution: {
                tarball: wantedDependency.pref,
            },
            resolvedVia: 'url',
        };
    });
}
exports.default = resolveTarball;
//# sourceMappingURL=index.js.map